extends layout

block memory
  paper-material(elevation=2).main
    h1 Memory
    h3 Change Alogorithm
    div.change-mode(data-mode="memory")
      paper-radio-group(selected='FF')
        paper-radio-button(name='FF') FF
        paper-radio-button(name='NF') NF
        paper-radio-button(name='BF') BF
        paper-radio-button(name='WF') WF
    h3 Memory History
    canvas#memoryHistory(width="900", height='300')
    h3 Memory Sections
    canvas#memoryPercent(width='300' height='300')
  

block cpu
  paper-material(elevation=2).main
    h1 CPU
    h3 Change Alogorithm
    div.change-mode(data-mode="cpu")
      paper-radio-group(selected='0')
        paper-radio-button(name='0') FCFS
        paper-radio-button(name='1') LZ
        paper-radio-button(name='2') DJFKLZ
        paper-radio-button(name='3') JTYXJ
        paper-radio-button(name='4') DTYXJ
        paper-radio-button(name='5') ZDZY
        paper-radio-button(name='6') ZGXYB
    h3 Adding process
      div#inputs
        div.input-box
          paper-input(label="name")
        div.input-box
          paper-input(label="memory")
        div.input-box
          paper-input(label="time")
        div.input-box
          paper-input(label="level")
        div.input-box(style="float: right")
          paper-button(raised style="background:#99ee44")#update Add
    div#play-ground
      style.
        #play-ground {
          width: 100%;
          height: 450px;
          overflow: hidden;
          margin: 0 auto;
          position: relative;
        }
        
        .play-circle {
          width: 10px;
          height: 10px;
          border-radius: 10px;
          background: red;
          position: absolute;
          left: 0; 
          top: 0;
          text-align: center;
          line-height: 10px;
          opacity: .6;
          
          transition: all 300ms 0ms ease-in;
        }
      script.
        
        socket.on('add a process', function(data) {
          var circle = createCircle(data);
          moveTo(circle, 0);
        });
        
        socket.on('heart beat', function(data) {
          var pcbs = data.pcbs.total;
          [].forEach.call(pcbs, function(val) {
            var circle = findCircle(val.id);
            if (!circle) {
              moveTo(createCircle(val), val.status);
            } else {
              if (circle.status === val.status) {
                return;
              }
              moveTo(circle, val.status);
            }
          });
        });
        
        var ready = [], init = [], finish = [], wait = [];
        var executing = null;
        var playground = $('#play-ground');
        var playgroundXHalf = playground.width() / 2;
        var playgroundYHalf = playground.height() / 2;
        
        var largestSize = 0;
        
        function moveTo(circle, queue) {
          var from = circle.queue;
          if (from) {
            from.splice(from.indexOf(circle), 1);
          } else {
            playground.append(circle.element);
          }
          switch(queue) {
            case 1:
              ready.push(circle);
              translate(circle, {x: Math.random() * playgroundXHalf,
                y: Math.random() * playgroundYHalf});
              circle.from = ready;
              circle.status = 1;
              break;
            case 0:
              init.push(circle);
              translate(circle, {x: (1.2 +Math.random()) * playgroundXHalf,
                y: Math.random() * playgroundYHalf});
              circle.from = init;
              circle.status = 0;
              break;
            case 4:
              finish.push(circle);
              translate(circle, {x: (1.2 +Math.random()) * playgroundXHalf,
                y: (1.2 +Math.random()) * playgroundYHalf});
              resize(circle, 10);
              circle.element.css('background', '#aaa');
              circle.from = finish;
              circle.status = 4;
              break;
            case 3:
              translate(circle, {x: (Math.random()) * playgroundXHalf,
                y: (1.2 +Math.random()) * playgroundYHalf});
              wait.push(circle);
              circle.from = wait;
              circle.status = 3;
              break;
          }
        }
        
        function translate(circle, to) {
          circle.element.css({
            transform: 'translate(' + to.x + 'px,' + to.y + 'px' + ')'
          });
        }
        
        function resize(circle, size) {
          largestSize = Math.max(largestSize, size);
          
          circle.element.css({
            width: size,
            height: size,
            borderRadius: size,
            transform: 'translate(' + circle.x + (size - circle.size)/2 + 'px, ' +
              circle.y + (size - circle.size)/2 + 'px' + ')'
          });
          
        }
        
        function findCircle(id) {
          if(executing && executing.id === id) {
            return executing;
          }
          
          for(var i = 0 ; i< ready.length; i++) {
            if (ready[i].id == id)
              return ready[i];
          }
          
          for(var i = 0 ; i< init.length; i++) {
            if (init[i].id == id)
              return init[i];
          }
          
          for(var i = 0 ; i< finish.length; i++) {
            if (finish[i].id == id)
              return finish[i];
          }
          
          for(var i = 0 ; i< wait.length; i++) {
            if (wait[i].id == id)
              return wait[i];
          }
          return null;
        }
        
        function createCircle(data) {
          var circle = {};
          circle.data = data;
          circle.name = data.name;
          circle.id = data.id;
          circle.level = data.level;
          circle.runtime = data.runtime;
          circle.x = 0; circle.y = 0;
          circle.status = data.status;
          circle.element = $('<div class="play-circle">'+ circle.name +'</div>');
          
          resize(circle, circle.runtime);
          return circle;
        }
    h3 Cpu Status
    table
      thead
        tr
          th name
          th cpu time
          th memory size
          th level
          th user
          th status
      tbody#pcbTable
    
block hard-disk
  style.
    #disk-section-container {
      width: 100%;
      height: 300px;
    }
    .disk-section {
      width: 8px;
      height: 8px;
      margin: 1px;
      background: #ccc;
      float: left;
    }
  paper-material(elevation=2).main
    h1 hard disk
    h3 Hard Disk Block
    paper-input(label="name")#fcb-name
    paper-textarea#fcb-content
    paper-button(raised)#add-fcb add
    div#disk-section-container
  script.
    socket.on('heart beat', function(data) {
      var disk = data.disk;
      $('#disk-section-container').html('');
      for (var i =0 ;i < disk.sectionNum; i ++) {
        var sec = $('<div></div>');
        sec.addClass('disk-section');
        if (!disk.diskSections[i].isIdle) {
          sec.css('background', uuidToHex(disk.diskSections[i].fcb));
        }
        $('#disk-section-container').append(sec);
      }
    });
    
    $('#add-fcb').on('click', function() {
      socket.emit('new fcb', {
        name: $('#fcb-name')[0].label,
        content: $('#textarea')[0].value
      });
    });
    
    socket.on('new fcb', function(data) {
      console.log(data);
    });

block desktop
  style.
    #desktop {
      display: none;
      width: 100%;
      position: relative;
    }
    #login {
      width: 400px;
      margin: 50px auto;
      padding: 50px 60px;
    }
    #right-menu {
      width: 200px;
      display: none;
      position: absolute;
    }
    #right-menu paper-item {
      cursor: pointer;
    }
    #right-menu paper-item:hover {
      background: #eee;
    }
    .desktop-file {
      width: 80px;
      height: 100px;
      padding-top: 80px;
      position: absolute;
    }
    .desktop-file p {
      text-align: center;
    }
    
    #editor-container {
      position: absolute;
      width: 700px;
      height: 400px;
      display: none;
      left: 50%;
      top: 50%;
      margin-left: -350px;
      margin-top: -200px;
      background: #fafafa;
      z-index: 200;
    }
  div#desktop
    paper-material#login
      h2 logging
      paper-input(label="username")#username
      paper-button(raised style="background: #66ff44")#login-btn Login
    paper-material#menu-bar
    paper-material#right-menu
      paper-menu
        paper-item#new-file new file
        paper-item#new-folder new folder
        paper-item#new-process new process
        paper-item#exit-desktop exit
    paper-material#editor-container
      paper-toolbar
        paper-button#editor-close close
      paper-textarea#editor
      paper-button#editor-edit edit
      
  script.
    // TODO: desktop
    var user = 'admin';
    $('#login-btn').on('click', function() {
      socket.emit('user login', $('#username').val());
      user = $('#username').val();
      $('#login').hide();
      $('#desktop').height(window.screen.availHeight);
    });
    
    var position = {};
    
    $('#desktop').on('contextmenu', function(e) {
      if (user === 'admin') {
          return;
      }
      e.preventDefault();
      
      position = {
        x: e.clientX,
        y: e.clientY
      }
      $('#right-menu').css({
        top: e.clientY,
        left: e.clientX
      }).show();
    });
    
    function createFile(name, id) {
      var file = $('<div></div>');
      file.addClass('desktop-file');
      file.attr('name', name).attr('fid', id);
      file.html('<p>' + name + '</p>');
      return file;
    }
    socket.on('new fcb', function(data) {
      var file =createFile(data.name, data.id);
      $('#desktop').append(file);
      file.css({
        left: position.x,
        top: position.y
      });
    });
    
    socket.on('read fcb', function(data) {
      $('#editor-container').show();
      $('#editor')[0].value = data.content;
      $('#editor').attr('pid', data.id);
    });
    
    $('#editor-close').on('click', function() {
      $('#editor-container').hide();
    });
    
    $('#editor-edit').on('click',function() {
      socket.emit('edit fcb', {
        id: $('#editor').attr('pid'),
        content: $('#editor').val()
      });
    });
    
    $('#desktop').on('click', function(e) {
      
      $('#right-menu').hide();
    });
    
    $('#desktop').on('click', '.desktop-file', function() {
      socket.emit('read fcb', $(this).attr('fid'));
    });
    
    $('#new-file').on('click', function() {
      socket.emit('new fcb', {
        name: 'new file',
        content: ''
      });
    });
    $('#new-folder').on('click', function() {
      
    });
    $('#new-process').on('click', function() {
      
    });
    $('#exit-desktop').on('click', function() {
      $('paper-drawer-panel').show();
      $('#desktop').hide();
      
      socket.emit('user logout', user);
      user = 'admin';
    });
